[user]
	name = Ferran Basora
	email = fcsonline@gmail.com
[core]
	editor = vim
	excludesfile = /Users/ferranbasora/.gitignore_global
[color]
	diff = auto
	branch = auto
	interactive = auto
	status = auto
[branch]
	autosetuprebase = always
[alias]
	ci = commit --verbose
	co = checkout
	cp = cherry-pick
	st = status --short
	rc = rebase --continue
	br = branch
	cached = diff --cached
	undo = reset --soft HEAD~1
	show-patch = format-patch -1 --stdout
	sha = rev-parse HEAD
	origin = config --get remote.origin.url
	current = rev-parse --abbrev-ref HEAD
	out = !git log origin/$(git current)..
	incoming = !git log ..origin/$(git current)
	publish= !git push origin $(git current)
	id = !echo "git clone --recursive $(git origin) --branch $(git current)"
	recent = !git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | grep -v develop | head -n 10
	fixup = "!f() { git commit --fixup=$1; git rebase -i --autosquash $1~1; }; f"
	wip = !git add --all . && git commit -m 'WIP'
	pam= !git checkout $(git recent | fzf)
	pamfix= !git fixup $(git log --pretty=oneline | head | fzf | awk '{ print $1 }')
	pamshow= !git show $(git log --pretty=oneline | head | fzf | awk '{ print $1 }')
	pamrebase= !git rebase -i $(git log --pretty=oneline | head | fzf | awk '{ print $1 }')
	pamvim= !vim $(git status -s | awk '{ print $2 }' | fzf)
	root = !pwd
	back = checkout -
[push]
	default = simple
[merge "railsschema"]
	name = newer Rails schema version
	driver = "ruby -e '\n\
		system %(git), %(merge-file), %(--marker-size=%L), %(%A), %(%O), %(%B)\n\
		b = File.read(%(%A))\n\
		b.sub!(/^<+ .*\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n=+\\nActiveRecord::Schema\\.define.:version => (\\d+). do\\n>+ .*/) do\n\
		  %(ActiveRecord::Schema.define(:version => #{[$1, $2].max}) do)\n\
		end\n\
		File.open(%(%A), %(w)) {|f| f.write(b)}\n\
		exit 1 if b.include?(%(<)*%L)'"
